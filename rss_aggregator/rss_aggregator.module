<?php

/**
 * This module pulls in remote RSS feeds and saves them as nodes
 *
 * This module was created by John Ediger of Conover Tuttle Pace for Breeders' Cup LLC.
 *
 * @author John Ediger <jediger@gmail.com>
 */

/**
 * Implements hook_menu().
 */
function rss_aggregator_menu() {
  
  $items['admin/content/rss_aggregator'] = array(
    'title' => 'RSS Aggregator',
    'description' => 'Pull in RSS content and save as nodes',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rss_aggregator_admin_form'),
    'access arguments' => array('administer content'),
    'file' => 'rss_aggregator.admin.inc',
  );
  $items['admin/content/rss_aggregator/selection'] = array(
    'title' => 'Node Selection',
    'description' => 'Select nodes to import and publish',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rss_aggregator_admin_form'),
    'access arguments' => array('administer content'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'rss_aggregator.admin.inc',
  );
  $items['admin/content/rss_aggregator/config'] = array(
    'title' => 'Configuration',
    'description' => 'Twilio Call Statistics',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('rss_aggregator_config_form'),
    'access arguments' => array('administer content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'rss_aggregator.config.inc',
  );
  return $items;
}

/**
 * Return the contents of the rss_aggregator_sources table
 */
function rss_aggregator_get_sources() {
  $sources = array();
  $result = db_query("SELECT * FROM {rss_aggregator_sources}");
  foreach ($result as $record) {
    $sources[] = array(
      'raid' => $record->raid,
      'name' => $record->name,
      'url' => $record->url,
      'type' => $record->type,
      'field' => $record->field,
    );
  }
  if(!empty($sources))
    return $sources;
}

/**
 * Retrieve XML from the aggregator sources
 */
function rss_aggregator_fetch_xml($url) {
  $ch = curl_init(); 
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_TIMEOUT, 10);
  curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)');
  curl_setopt($ch, CURLOPT_POST, 0);
  curl_setopt($ch, CURLOPT_HEADER, FALSE);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
  curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
  
  $result = curl_exec($ch);
  $error = curl_error($ch);
  
  curl_close($ch);
  if(!$result || $result=='') {
    watchdog('rss_aggregator', 'Could not retrieve XML', array($result), WATCHDOG_WARNING);
  }
  return $result;
}

/**
 * Create nodes from Array
 */
function rss_aggregator_create_node($article) {
  $node = new stdClass();
  $node->type = $article['type'];
  node_object_prepare($node);
  
  $node->title    = $article['title'];
  $node->language = LANGUAGE_NONE;
  $node->created  = time();
  $node->body[$node->language][0]['value']   = $article['desc'];
  $node->body[$node->language][0]['summary'] = text_summary(strip_tags($article['desc']));
  $node->body[$node->language][0]['format']  = 'full_html';
  $node->field_guid['und'][0]['value'] = $article['guid'];
  foreach ($article['taxonomy'] as $key => $tag) {
    if ($term = taxonomy_get_term_by_name($tag)) {
      $terms_array = array_keys($term);
      $node->field_tags[LANGUAGE_NONE][$key]['tid'] = $terms_array['0'];
    } else {
      $term = new stdClass();
      $term->name = $tag;
      $term->vid = 1;
      if(!empty($term->name)) {
        $test = taxonomy_term_save($term);
        $term = current(taxonomy_get_term_by_name($tag));
        $tid = $term->tid;
        $node->field_tags[LANGUAGE_NONE][$key]['tid'] = $tid;
      }
    }
  } 
  node_save($node);
}

